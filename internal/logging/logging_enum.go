// Code generated by go-enum
// DO NOT EDIT!

package logging

import (
	"fmt"
)

const (
	// TraceTypeEntering is a TraceType of type Entering
	TraceTypeEntering TraceType = iota
	// TraceTypeInside is a TraceType of type Inside
	TraceTypeInside
	// TraceTypeExiting is a TraceType of type Exiting
	TraceTypeExiting
)

const _TraceTypeName = "enteringinsideexiting"

var _TraceTypeMap = map[TraceType]string{
	0: _TraceTypeName[0:8],
	1: _TraceTypeName[8:14],
	2: _TraceTypeName[14:21],
}

// String implements the Stringer interface.
func (x TraceType) String() string {
	if str, ok := _TraceTypeMap[x]; ok {
		return str
	}
	return fmt.Sprintf("TraceType(%d)", x)
}

var _TraceTypeValue = map[string]TraceType{
	_TraceTypeName[0:8]:   0,
	_TraceTypeName[8:14]:  1,
	_TraceTypeName[14:21]: 2,
}

// ParseTraceType attempts to convert a string to a TraceType
func ParseTraceType(name string) (TraceType, error) {
	if x, ok := _TraceTypeValue[name]; ok {
		return x, nil
	}
	return TraceType(0), fmt.Errorf("%s is not a valid TraceType", name)
}
